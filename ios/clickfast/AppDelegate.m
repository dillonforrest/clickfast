/**
 * Copyright (c) 2015-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 */

#import "AppDelegate.h"
#import "RCTRootView.h"
#import "RCTViewManager.h"
#import <Skillz/Skillz.h>

@implementation AppDelegate

- (NSUInteger)application:(UIApplication *)application supportedInterfaceOrientationsForWindow:(UIWindow *)window
{
  return UIInterfaceOrientationMaskPortrait;
}

- (void)tournamentWillBegin:(NSDictionary *)gameParameters
              withMatchInfo:(SKZMatchInfo *)matchInfo
{
  NSLog(@"Game Parameters: %@", gameParameters);
  NSLog(@"Now starting a gameâ€¦");
  
  NSURL *jsCodeLocation;
  
  /**
   * Loading JavaScript code - uncomment the one you want.
   *
   * OPTION 1
   * Load from development server. Start the server from the repository root:
   *
   * $ npm start
   *
   * To run on device, change `localhost` to the IP address of your computer
   * (you can get this by typing `ifconfig` into the terminal and selecting the
   * `inet` value under `en0:`) and make sure your computer and iOS device are
   * on the same Wi-Fi network.
   */
  
  jsCodeLocation = [NSURL URLWithString:@"http://localhost:8081/index.ios.bundle?platform=ios&dev=true"];
  
  /**
   * OPTION 2
   * Load from pre-bundled file on disk. The static bundle is automatically
   * generated by the "Bundle React Native code and images" build step when
   * running the project on an actual device or running the project on the
   * simulator in the "Release" build configuration.
   */
  
  //   jsCodeLocation = [[NSBundle mainBundle] URLForResource:@"main" withExtension:@"jsbundle"];
  
  RCTRootView *rootView = [[RCTRootView alloc] initWithBundleURL:jsCodeLocation
                                                      moduleName:@"clickfast"
                                               initialProperties:nil
                                                   launchOptions:self.launchOptions];
  
  self.window = [[UIWindow alloc] initWithFrame:[UIScreen mainScreen].bounds];
  UIViewController *rootViewController = [UIViewController new];
  rootViewController.view = rootView;
  self.window.rootViewController = rootViewController;
  [self.window makeKeyAndVisible];
}

- (void)skillzWillExit
{
  NSLog(@"Skillz exited.");
}

- (SkillzOrientation)preferredSkillzInterfaceOrientation
{
  return SkillzPortrait;
}

- (BOOL)application:(UIApplication *)application didFinishLaunchingWithOptions:(NSDictionary *)launchOptions
{
  
  /**
   * skillz init
   */
  
  self.launchOptions = launchOptions;
  
  NSLog(@"init skillz");
#ifdef SANDBOX
  [[Skillz skillzInstance] initWithGameId:@"1682" forDelegate:self withEnvironment:SkillzSandbox allowExit:NO];
#else
  [[Skillz skillzInstance] initWithGameId:@"1682" forDelegate:self withEnvironment:SkillzProduction allowExit:NO];
#endif
  
  dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(2 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
    [[Skillz skillzInstance] launchSkillz];
  });
  
  return YES;
}

@end




@interface SkillzBridge : RCTViewManager
@end

@implementation SkillzBridge

RCT_EXPORT_MODULE()

- (UIView *)view
{
  return [[UIView alloc] init];
}

RCT_EXPORT_METHOD(endMatch:(NSNumber *)score)
{
  if ([[Skillz skillzInstance] tournamentIsInProgress]) {
    [[Skillz skillzInstance] displayTournamentResultsWithScore:score
                                                withCompletion:^{
                                                  NSLog(@"Reporting score back to Skillz...");
                                                }];
  }
}

@end
